name: Main CI & Canary Release

on:
  push:
    branches: [master]
permissions:
  actions: read
  contents: write
  id-token: write

env:
  NODE_VERSION: '20'

jobs:
  ci-core:
    name: Core Packages CI
    uses: ./.github/workflows/ci-core.yml
    permissions:
      actions: read
      contents: read

  ci-supabase-js:
    name: Supabase-JS Integration CI
    uses: ./.github/workflows/ci-supabase-js.yml
    permissions:
      actions: read
      contents: read

  ci-auth-js-node18:
    name: Auth-JS Node.js 18 Compatibility
    uses: ./.github/workflows/ci-auth-js-node18.yml
    permissions:
      actions: read
      contents: read

  # ==========================================
  # CANARY RELEASE (only on master, after all CI passes)
  # ==========================================

  release-canary:
    name: Release Canary
    runs-on: ubuntu-latest
    needs: [ci-core, ci-supabase-js, ci-auth-js-node18]
    # Only run on master branch pushes, and only if all CI jobs succeeded
    if: |
      github.ref == 'refs/heads/master' &&
      github.event_name == 'push' &&
      needs.ci-core.result == 'success' &&
      needs.ci-supabase-js.result == 'success' &&
      needs.ci-auth-js-node18.result == 'success'
    steps:
      - name: Generate token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Configure git
        run: |
          git config --global user.name "supabase-releaser[bot]"
          git config --global user.email "supabase-releaser[bot]@users.noreply.github.com"

      - name: Release canary version
        id: release
        run: |
          echo "Running nx release..."
          npm run release-canary
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
          # Needed to push tags
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
